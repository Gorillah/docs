{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Blurr AI",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://blurr.app"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/call": {
      "post": {
        "description": "",
        "requestBody": {
          "description": "Make phone call",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Call"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "call response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "This is the unique identifier for the call.",
                      "type": "string"
                    },
                    "assistantId": {
                      "description": "This is the assistant that made the call.",
                      "type": "string"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "This is the number of the customer.",
                          "type": "string"
                        }
                      },
                      "required": ["number"]
                    },
                    "status": {
                      "description": "Available options: ```queued```, ```ringing```, ```in-progress```, ```forwarding```, ```ended```.",
                      "type": "string"
                    },
                    "type": {
                      "description": "This is the type of call. Available options: ```inboundPhoneCall```, ```outboundPhoneCall```.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calls/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of call to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Call": {
        "required": ["customerNumber", "assistantId", "phoneNumberId"],
        "type": "object",
        "properties": {
          "customerNumber": {
            "description": "This is the number of the customer.",
            "type": "string"
          },
          "assistantId": {
            "description": "This is the assistant id that will be used for the call.",
            "type": "string"
          },
          "phoneNumberId": {
            "description": "This is the assistant id that will be used for the call.",
            "type": "string"
          }
        }
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
